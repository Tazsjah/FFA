plugins {
    id "java"
    id "idea"
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

group = "mcheroes"
version = "1.0.0"

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name = "redlib"
        url = "https://redempt.dev"
    }
    maven {
        name = "placeholderapi"
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT"

    compileOnly "com.github.Revxrsal.Lamp:common:3.1.5"
    compileOnly "com.github.Revxrsal.Lamp:bukkit:3.1.5"

    compileOnly files("libs/MCHeroes-Core-1.0.0.jar")

    compileOnly 'com.github.Redempt:RedLib:6.5.8'
    compileOnly 'me.clip:placeholderapi:2.11.3'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileJava { // Preserve parameter names in the bytecode
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = "javac"
}

shadowJar {
    archiveBaseName.set("MCHeroes-Dropper")
    archiveClassifier.set("")
}
